<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Title" xml:space="preserve">
    <value>Polla</value>
  </data>
  <data name="Subtitle" xml:space="preserve">
    <value>Aplicación de pronósticos futboleros</value>
  </data>
  <data name="About" xml:space="preserve">
    <value>Acerca de</value>
  </data>
  <data name="Countries" xml:space="preserve">
    <value>Países</value>
  </data>
  <data name="Delete" xml:space="preserve">
    <value>Borrar</value>
  </data>
  <data name="Edit" xml:space="preserve">
    <value>Editar</value>
  </data>
  <data name="Home" xml:space="preserve">
    <value>Inicio</value>
  </data>
  <data name="Image" xml:space="preserve">
    <value>Imagen</value>
  </data>
  <data name="NoRecords" xml:space="preserve">
    <value>No hay registros para mostrar...</value>
  </data>
  <data name="New" xml:space="preserve">
    <value>Nuevo</value>
  </data>
  <data name="Country" xml:space="preserve">
    <value>País</value>
  </data>
  <data name="Confirmation" xml:space="preserve">
    <value>Confirmación</value>
  </data>
  <data name="LeaveAndLoseChanges" xml:space="preserve">
    <value>¿Deseas abandonar la página y perder los cambios?</value>
  </data>
  <data name="SaveChanges" xml:space="preserve">
    <value>Guardar Cambios</value>
  </data>
  <data name="Return" xml:space="preserve">
    <value>Regresar</value>
  </data>
  <data name="Create" xml:space="preserve">
    <value>Crear</value>
  </data>
  <data name="Cancel" xml:space="preserve">
    <value>Cancelar</value>
  </data>
  <data name="RecordSavedOk" xml:space="preserve">
    <value>Registro guardado con éxito.</value>
  </data>
  <data name="Error" xml:space="preserve">
    <value>Error</value>
  </data>
  <data name="DeleteConfirm" xml:space="preserve">
    <value>¿Está seguro de borrar el {0}: {1}?</value>
  </data>
  <data name="RecordDeletedOk" xml:space="preserve">
    <value>Registro borrado con éxito.</value>
  </data>
  <data name="Yes" xml:space="preserve">
    <value>Sí</value>
  </data>
  <data name="RecordCreatedOk" xml:space="preserve">
    <value>Regisro creado con éxito.</value>
  </data>
  <data name="ERR001" xml:space="preserve">
    <value>Registro no encontrado.</value>
  </data>
  <data name="ERR002" xml:space="preserve">
    <value>No se puede borrar, porque tiene registros relacionados.</value>
  </data>
  <data name="ERR003" xml:space="preserve">
    <value>Ya existe el registro que estas intentando crear.</value>
  </data>
  <data name="Team" xml:space="preserve">
    <value>Equipo</value>
  </data>
  <data name="MaxLength" xml:space="preserve">
    <value>El campo {0} no puede tener más de {1} caracteres.</value>
  </data>
  <data name="RequiredField" xml:space="preserve">
    <value>El campo {0} es obligatorio.</value>
  </data>
  <data name="ERR004" xml:space="preserve">
    <value>El código del país no es válido.</value>
  </data>
  <data name="ERR005" xml:space="preserve">
    <value>El código del equipo no es válido.</value>
  </data>
  <data name="Teams" xml:space="preserve">
    <value>Equipos</value>
  </data>
  <data name="SelectFile" xml:space="preserve">
    <value>Seleccione un archivo...</value>
  </data>
  <data name="Search" xml:space="preserve">
    <value>Buscar...</value>
  </data>
  <data name="SelectACountry" xml:space="preserve">
    <value>-- Selecciona un País --</value>
  </data>
  <data name="RecordsNumber" xml:space="preserve">
    <value>Número de Registros</value>
  </data>
  <data name="All" xml:space="preserve">
    <value>Todos</value>
  </data>
  <data name="Filter" xml:space="preserve">
    <value>Filtrar</value>
  </data>
  <data name="Clean" xml:space="preserve">
    <value>Limpiar</value>
  </data>
  <data name="Actions" xml:space="preserve">
    <value>Acciones</value>
  </data>
  <data name="No" xml:space="preserve">
    <value>No</value>
  </data>
  <data name="PleaseWait" xml:space="preserve">
    <value>Por favor espere...</value>
  </data>
  <data name="Admin" xml:space="preserve">
    <value>Administrador</value>
  </data>
  <data name="User" xml:space="preserve">
    <value>Usuario</value>
  </data>
  <data name="FirstName" xml:space="preserve">
    <value>Nombres</value>
  </data>
  <data name="LastName" xml:space="preserve">
    <value>Apellidos</value>
  </data>
  <data name="UserType" xml:space="preserve">
    <value>Tipo de usuario</value>
  </data>
  <data name="NotFound" xml:space="preserve">
    <value>No Encontrado</value>
  </data>
  <data name="NothingInRoute" xml:space="preserve">
    <value>Lo sentimos no hay nada en esta ruta.</value>
  </data>
  <data name="Authorizing" xml:space="preserve">
    <value>Autorizando...</value>
  </data>
  <data name="NotAuthorized" xml:space="preserve">
    <value>No estas autorizado para ver este contenido...</value>
  </data>
  <data name="Password" xml:space="preserve">
    <value>Contraseña</value>
  </data>
  <data name="LengthField" xml:space="preserve">
    <value>El campo {0} debe tener entre {2} y {1} carácteres.</value>
  </data>
  <data name="PasswordAndConfirmationDifferent" xml:space="preserve">
    <value>La contraseña y la confirmación no son iguales.</value>
  </data>
  <data name="PasswordConfirm" xml:space="preserve">
    <value>Confirmación de contraseña</value>
  </data>
  <data name="Email" xml:space="preserve">
    <value>Correo electrónico</value>
  </data>
  <data name="ValidEmail" xml:space="preserve">
    <value>Debes ingresar un correo válido.</value>
  </data>
  <data name="MinLength" xml:space="preserve">
    <value>El campo {0} debe tener al menos {1} carácteres.</value>
  </data>
  <data name="ERR006" xml:space="preserve">
    <value>Email o contraseña incorrectos.</value>
  </data>
</root>